buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}


apply plugin: 'maven'
group = 'com.gitlab.cable-mc'
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "kotlin"
version = '1.1.4'
archivesBaseName = 'cable-libs'

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}


repositories {
    mavenCentral()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = 'Kotlin Early Access'
        url = 'https://dl.bintray.com/kotlin/kotlin-eap'
    }
    maven {
        name = 'Dokka'
        url = 'https://dl.bintray.com/kotlin/dokka'
    }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/groups/public/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: kotlin_version
    compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk7", version: kotlin_version
    compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: kotlin_version
    compile group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: kotlin_version
    compile group: "org.jetbrains", name: "annotations", version: annotations_version
    compile group: "org.jetbrains.kotlinx", name: "kotlinx-coroutines-core", version: coroutines_version
    compile group: "org.jetbrains.kotlinx", name: "kotlinx-coroutines-jdk8", version: coroutines_version
    compile "co.aikar:acf-core:0.5.0-SNAPSHOT"
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.google.inject.extensions:guice-assistedinject:4.1.0'
    compile 'com.google.guava:guava:21.0'
}

shadowJar {
    classifier = null
    dependencies {
        include dependency("org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}")
        include dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}")
        include dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}")
        include dependency("org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}")
        include dependency("org.jetbrains:annotations:${annotations_version}")
        include dependency("org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}")
        include dependency("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${coroutines_version}")
        include dependency("co.aikar:acf-core:0.5.0-SNAPSHOT")
        include dependency("co.aikar:locales:1.0-SNAPSHOT")
        include dependency("co.aikar:Table:1.0.0-SNAPSHOT")
        include dependency("co.aikar:DelegatingMap:1.0.0-SNAPSHOT")
        include dependency("co.aikar:minecraft-timings:1.0.4")
        include dependency('com.google.inject:guice:4.1.0')
        include dependency('com.google.inject.extensions:guice-assistedinject:4.1.0')
        include dependency('com.google.guava:guava:21.0')
        include dependency("javax.inject:javax.inject:1")
        include dependency("aopalliance:aopalliance:1.0")
    }
    relocate 'co.aikar.commands', 'com.cable.library.shaded.acf'
    relocate 'co.aikar.locales', 'com.cable.library.shaded.locales'

}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}


kotlinSourcesJar {
    from(sourceSets.main.kotlin.srcDirs)
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xexplicit-api=warning"]
    }
}
tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
    task.options.fork = true
}


tasks.build.dependsOn kotlinSourcesJar
tasks.build.dependsOn shadowJar
tasks.build.dependsOn reobfShadowJar


compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}